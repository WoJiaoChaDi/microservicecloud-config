spring: 
  profiles: 
    active: 
      - dev

---
server:
  port: 8001
  
mybatis:
  config-location: classpath:mybatis/mybatis.cfg.xml        # mybatis配置文件所在路径
  type-aliases-package: com.atguigu.springcloud.entities    # 所有Entity别名类所在包(告诉mybaties扫描这个包下面的实体类）
  mapper-locations:
  - classpath:mybatis/mapper/**/*.xml                       # mapper映射文件（DeptMapper.xml 完成 DeptDaoImpl 的工作）
    
spring:
   profiles: dev
   application:
    #3个provider的微服务名字一定要一样，这样才能保证负载均衡的时候访问提一个微服务
    name: microservicecloud-config-dept-client                            #对外暴露的微服务名字，这个名字很重要，Eureka中会用到（Eureka-7001 服务器页面中 Application的名字，会全转成大写）
   datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包
    url: jdbc:mysql://192.168.198.145:3306/clouddb01              # 数据库名称
    username: root
    password: root
    dbcp2:
      min-idle: 5                                           # 数据库连接池的最小维持连接数
      initial-size: 5                                       # 初始化连接数
      max-total: 5                                          # 最大连接数
      max-wait-millis: 200                                  # 等待连接获取的最大超时时间

eureka:
#  server:
#    enable-self-preservation: false   #禁用自我保护机制，一般建议起开自我保护，使用默认的 true
  client: #客户端注册进eureka服务列表内
    service-url:
#      defaultZone: http://localhost:7001/eureka   #需要入住的eureka地址（即 eureka-7001 的 defaultZone）
      #集群
      defaultZone: http://eureka7001.com:7001/eureka/   #需要入住的eureka地址（即 eureka-7001 的 defaultZone）
  instance:
    instance-id: dept-8001.com   #实例id（即Eureka-7001 服务器页面中的 Status）
    prefer-ip-address: true     #访问路径可以显示IP地址(即选中 Eureka-7001 服务器页面中的 Status后 的 链接IP)


#详细信息的描述
info:
  app.name: atguigu-microservicecloud-config01
  company.name: www.atguigu.com
#  build.artifactId: $project.artifactId$
#  build.version: $project.version$
  #上面的方式读取不到，就下面的@@  因为 ${}是获取yml里面的内容
  build.artifactId: "@project.artifactId@"
  build.version: "@project.version@"

#一定要以UTF-8格式保存